---
name: Dev - Build and Test

on:
  push:
    branches:
      - development

permissions: read-all

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        dotnet-version: ['7.0.406']
        node-version: ['21.5']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        dotnet build
        cd ./client
        npm install --legacy-peer-deps
    - name: Start Server
      run: |
        dotnet watch --project ./API &
        sleep 5
        
    - name: Check if dotnet watch is running (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        tasklist | findstr /C:"dotnet.exe" > nul
        if (-not $?) {
          echo "dotnet watch is not running"
          exit 1
        } else {
          echo "dotnet watch is running"
        }
    - name: Check if dotnet watch is running (Linux & MacOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest'
      run: |
        if pgrep -x "dotnet" > /dev/null; then
          echo "dotnet watch is running"
        else
          echo "dotnet watch is not running"
          exit 1
        fi
        
    - name: Start npm server
      run: |
        cd ./client
        npm start &